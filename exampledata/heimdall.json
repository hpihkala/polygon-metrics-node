{
  "version": 1,
  "validator": "0xa38f3504e661D2B152ADAf197Ba5057c911C879B",
  "metrics": {
    "go_cgo_go_to_c_calls_calls_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "4.405104e+07"
        }
      ],
      "help": "Count of calls made from Go to C by the current process."
    },
    "go_gc_cycles_automatic_gc_cycles_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "28260"
        }
      ],
      "help": "Count of completed GC cycles generated by the Go runtime."
    },
    "go_gc_cycles_forced_gc_cycles_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "0"
        }
      ],
      "help": "Count of completed GC cycles forced by the application."
    },
    "go_gc_cycles_total_gc_cycles_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "28260"
        }
      ],
      "help": "Count of all completed GC cycles."
    },
    "go_gc_duration_seconds": {
      "type": "SUMMARY",
      "metrics": [
        {
          "quantiles": {
            "0": "3.1455e-05",
            "1": "0.000363207",
            "0.25": "3.893e-05",
            "0.5": "4.8697e-05",
            "0.75": "6.9574e-05"
          },
          "count": "28260",
          "sum": "2.145887093"
        }
      ],
      "help": "A summary of the pause duration of garbage collection cycles."
    },
    "go_gc_heap_allocs_by_size_bytes_total": {
      "type": "HISTOGRAM",
      "metrics": [
        {
          "buckets": {
            "8.999999999999998": "4.684289883e+09",
            "24.999999999999996": "4.1368032124e+10",
            "64.99999999999999": "4.776322568e+10",
            "144.99999999999997": "5.9937400839e+10",
            "320.99999999999994": "6.6036980115e+10",
            "704.9999999999999": "6.6406260099e+10",
            "1536.9999999999998": "6.6573235015e+10",
            "3200.9999999999995": "6.6626855637e+10",
            "6528.999999999999": "6.6673810115e+10",
            "13568.999999999998": "6.6737361029e+10",
            "27264.999999999996": "6.6808515736e+10",
            "+Inf": "6.6811695935e+10"
          },
          "count": "6.6811695935e+10",
          "sum": "6.450620459952e+12"
        }
      ],
      "help": "Distribution of heap allocations by approximate size. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks."
    },
    "go_gc_heap_allocs_bytes_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "6.450620459952e+12"
        }
      ],
      "help": "Cumulative sum of memory allocated to the heap by the application."
    },
    "go_gc_heap_allocs_objects_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "6.6811695935e+10"
        }
      ],
      "help": "Cumulative count of heap allocations triggered by the application. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks."
    },
    "go_gc_heap_frees_by_size_bytes_total": {
      "type": "HISTOGRAM",
      "metrics": [
        {
          "buckets": {
            "8.999999999999998": "4.684245899e+09",
            "24.999999999999996": "4.136637872e+10",
            "64.99999999999999": "4.7761050827e+10",
            "144.99999999999997": "5.9934835145e+10",
            "320.99999999999994": "6.6033760534e+10",
            "704.9999999999999": "6.6403019018e+10",
            "1536.9999999999998": "6.6569983198e+10",
            "3200.9999999999995": "6.6623601363e+10",
            "6528.999999999999": "6.6670549906e+10",
            "13568.999999999998": "6.6734098389e+10",
            "27264.999999999996": "6.680524769e+10",
            "+Inf": "6.6808427323e+10"
          },
          "count": "6.6808427323e+10",
          "sum": "6.450143379008e+12"
        }
      ],
      "help": "Distribution of freed heap allocations by approximate size. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks."
    },
    "go_gc_heap_frees_bytes_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "6.450143379008e+12"
        }
      ],
      "help": "Cumulative sum of heap memory freed by the garbage collector."
    },
    "go_gc_heap_frees_objects_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "6.6808427323e+10"
        }
      ],
      "help": "Cumulative count of heap allocations whose storage was freed by the garbage collector. Note that this does not include tiny objects as defined by /gc/heap/tiny/allocs:objects, only tiny blocks."
    },
    "go_gc_heap_goal_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "6.7036384e+08"
        }
      ],
      "help": "Heap size target for the end of the GC cycle."
    },
    "go_gc_heap_objects_objects": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "3.268612e+06"
        }
      ],
      "help": "Number of objects, live or unswept, occupying heap memory."
    },
    "go_gc_heap_tiny_allocs_objects_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "1.893383408e+09"
        }
      ],
      "help": "Count of small allocations that are packed together into blocks. These allocations are counted separately from other allocations because each individual allocation is not tracked by the runtime, only their block. Each block is already accounted for in allocs-by-size and frees-by-size."
    },
    "go_gc_limiter_last_enabled_gc_cycle": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0"
        }
      ],
      "help": "GC cycle the last time the GC CPU limiter was enabled. This metric is useful for diagnosing the root cause of an out-of-memory error, because the limiter trades memory for CPU time when the GC's CPU time gets too high. This is most likely to occur with use of SetMemoryLimit. The first GC cycle is cycle 1, so a value of 0 indicates that it was never enabled."
    },
    "go_gc_pauses_seconds_total": {
      "type": "HISTOGRAM",
      "metrics": [
        {
          "buckets": {
            "-5e-324": "0",
            "9.999999999999999e-10": "0",
            "9.999999999999999e-09": "0",
            "9.999999999999998e-08": "0",
            "1.0239999999999999e-06": "0",
            "1.0239999999999999e-05": "13866",
            "0.00010239999999999998": "53606",
            "0.0010485759999999998": "56470",
            "0.010485759999999998": "56520",
            "0.10485759999999998": "56520",
            "+Inf": "56520"
          },
          "count": "56520",
          "sum": "NaN"
        }
      ],
      "help": "Distribution individual GC-related stop-the-world pause latencies."
    },
    "go_gc_stack_starting_size_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "2048"
        }
      ],
      "help": "The stack size of new goroutines."
    },
    "go_goroutines": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "146"
        }
      ],
      "help": "Number of goroutines that currently exist."
    },
    "go_info": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1",
          "labels": {
            "version": "go1.19.3"
          }
        }
      ],
      "help": "Information about the Go environment."
    },
    "go_memory_classes_heap_free_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "9.9688448e+07"
        }
      ],
      "help": "Memory that is completely free and eligible to be returned to the underlying system, but has not been. This metric is the runtime's estimate of free address space that is backed by physical memory."
    },
    "go_memory_classes_heap_objects_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.77080944e+08"
        }
      ],
      "help": "Memory occupied by live objects and dead objects that have not yet been marked free by the garbage collector."
    },
    "go_memory_classes_heap_released_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "3.08805632e+08"
        }
      ],
      "help": "Memory that is completely free and has been returned to the underlying system. This metric is the runtime's estimate of free address space that is still mapped into the process, but is not backed by physical memory."
    },
    "go_memory_classes_heap_stacks_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "5.996544e+06"
        }
      ],
      "help": "Memory allocated from the heap that is reserved for stack space, whether or not it is currently in-use."
    },
    "go_memory_classes_heap_unused_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "5.2146832e+07"
        }
      ],
      "help": "Memory that is reserved for heap objects but is not currently used to hold heap objects."
    },
    "go_memory_classes_metadata_mcache_free_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "2400"
        }
      ],
      "help": "Memory that is reserved for runtime mcache structures, but not in-use."
    },
    "go_memory_classes_metadata_mcache_inuse_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "28800"
        }
      ],
      "help": "Memory that is occupied by runtime mcache structures that are currently being used."
    },
    "go_memory_classes_metadata_mspan_free_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "2.244272e+06"
        }
      ],
      "help": "Memory that is reserved for runtime mspan structures, but not in-use."
    },
    "go_memory_classes_metadata_mspan_inuse_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "5.670928e+06"
        }
      ],
      "help": "Memory that is occupied by runtime mspan structures that are currently being used."
    },
    "go_memory_classes_metadata_other_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.8584464e+07"
        }
      ],
      "help": "Memory that is reserved for or used to hold runtime metadata."
    },
    "go_memory_classes_os_stacks_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0"
        }
      ],
      "help": "Stack memory allocated by the underlying operating system."
    },
    "go_memory_classes_other_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.486176e+06"
        }
      ],
      "help": "Memory used by execution trace buffers, structures for debugging the runtime, finalizer and profiler specials, and more."
    },
    "go_memory_classes_profiling_buckets_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "7.3329176e+07"
        }
      ],
      "help": "Memory that is used by the stack trace hash map used for profiling."
    },
    "go_memory_classes_total_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1.078064616e+09"
        }
      ],
      "help": "All memory mapped by the Go runtime into the current process as read-write. Note that this does not include memory mapped by code called via cgo or via the syscall package. Sum of all metrics in /memory/classes."
    },
    "go_memstats_alloc_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.77080944e+08"
        }
      ],
      "help": "Number of bytes allocated and still in use."
    },
    "go_memstats_alloc_bytes_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "6.450620459952e+12"
        }
      ],
      "help": "Total number of bytes allocated, even if freed."
    },
    "go_memstats_buck_hash_sys_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "7.3329176e+07"
        }
      ],
      "help": "Number of bytes used by the profiling bucket hash table."
    },
    "go_memstats_frees_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "6.8701810731e+10"
        }
      ],
      "help": "Total number of frees."
    },
    "go_memstats_gc_cpu_fraction": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0"
        }
      ],
      "help": "The fraction of this program's available CPU time used by the GC since the program started."
    },
    "go_memstats_gc_sys_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.8584464e+07"
        }
      ],
      "help": "Number of bytes used for garbage collection system metadata."
    },
    "go_memstats_heap_alloc_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.77080944e+08"
        }
      ],
      "help": "Number of heap bytes allocated and still in use."
    },
    "go_memstats_heap_idle_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.0849408e+08"
        }
      ],
      "help": "Number of heap bytes waiting to be used."
    },
    "go_memstats_heap_inuse_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "5.29227776e+08"
        }
      ],
      "help": "Number of heap bytes that are in use."
    },
    "go_memstats_heap_objects": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "3.268612e+06"
        }
      ],
      "help": "Number of allocated objects."
    },
    "go_memstats_heap_released_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "3.08805632e+08"
        }
      ],
      "help": "Number of heap bytes released to OS."
    },
    "go_memstats_heap_sys_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "9.37721856e+08"
        }
      ],
      "help": "Number of heap bytes obtained from system."
    },
    "go_memstats_last_gc_time_seconds": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1.6783554947678597e+09"
        }
      ],
      "help": "Number of seconds since 1970 of last garbage collection."
    },
    "go_memstats_lookups_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "0"
        }
      ],
      "help": "Total number of pointer lookups."
    },
    "go_memstats_mallocs_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "6.8705079343e+10"
        }
      ],
      "help": "Total number of mallocs."
    },
    "go_memstats_mcache_inuse_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "28800"
        }
      ],
      "help": "Number of bytes in use by mcache structures."
    },
    "go_memstats_mcache_sys_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "31200"
        }
      ],
      "help": "Number of bytes used for mcache structures obtained from system."
    },
    "go_memstats_mspan_inuse_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "5.670928e+06"
        }
      ],
      "help": "Number of bytes in use by mspan structures."
    },
    "go_memstats_mspan_sys_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "7.9152e+06"
        }
      ],
      "help": "Number of bytes used for mspan structures obtained from system."
    },
    "go_memstats_next_gc_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "6.7036384e+08"
        }
      ],
      "help": "Number of heap bytes when next garbage collection will take place."
    },
    "go_memstats_other_sys_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.486176e+06"
        }
      ],
      "help": "Number of bytes used for other system allocations."
    },
    "go_memstats_stack_inuse_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "5.996544e+06"
        }
      ],
      "help": "Number of bytes in use by the stack allocator."
    },
    "go_memstats_stack_sys_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "5.996544e+06"
        }
      ],
      "help": "Number of bytes obtained from system for stack allocator."
    },
    "go_memstats_sys_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1.078064616e+09"
        }
      ],
      "help": "Number of bytes obtained from system."
    },
    "go_sched_gomaxprocs_threads": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "24"
        }
      ],
      "help": "The current runtime.GOMAXPROCS setting, or the number of operating system threads that can execute user-level Go code simultaneously."
    },
    "go_sched_goroutines_goroutines": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "146"
        }
      ],
      "help": "Count of live goroutines."
    },
    "go_sched_latencies_seconds": {
      "type": "HISTOGRAM",
      "metrics": [
        {
          "buckets": {
            "-5e-324": "0",
            "9.999999999999999e-10": "4.8853799e+07",
            "9.999999999999999e-09": "4.8853799e+07",
            "9.999999999999998e-08": "1.56653539e+08",
            "1.0239999999999999e-06": "1.88689557e+08",
            "1.0239999999999999e-05": "2.09588036e+08",
            "0.00010239999999999998": "2.30032978e+08",
            "0.0010485759999999998": "2.32337133e+08",
            "0.010485759999999998": "2.323878e+08",
            "0.10485759999999998": "2.32393493e+08",
            "+Inf": "2.32393493e+08"
          },
          "count": "2.32393493e+08",
          "sum": "NaN"
        }
      ],
      "help": "Distribution of the time goroutines have spent in the scheduler in a runnable state before actually running."
    },
    "go_threads": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "32"
        }
      ],
      "help": "Number of OS threads created."
    },
    "process_cpu_seconds_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "41466.22"
        }
      ],
      "help": "Total user and system CPU time spent in seconds."
    },
    "process_max_fds": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "65536"
        }
      ],
      "help": "Maximum number of open file descriptors."
    },
    "process_open_fds": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "610"
        }
      ],
      "help": "Number of open file descriptors."
    },
    "process_resident_memory_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "7.2196096e+08"
        }
      ],
      "help": "Resident memory size in bytes."
    },
    "process_start_time_seconds": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1.67789895272e+09"
        }
      ],
      "help": "Start time of the process since unix epoch in seconds."
    },
    "process_virtual_memory_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.111265792e+09"
        }
      ],
      "help": "Virtual memory size in bytes."
    },
    "process_virtual_memory_max_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1.8446744073709552e+19"
        }
      ],
      "help": "Maximum amount of virtual memory available in bytes."
    },
    "promhttp_metric_handler_requests_in_flight": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1"
        }
      ],
      "help": "Current number of scrapes being served."
    },
    "promhttp_metric_handler_requests_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "30440",
          "labels": {
            "code": "200"
          }
        },
        {
          "value": "0",
          "labels": {
            "code": "500"
          }
        },
        {
          "value": "0",
          "labels": {
            "code": "503"
          }
        }
      ],
      "help": "Total number of scrapes by HTTP status code."
    },
    "tendermint_consensus_block_interval_seconds": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "6.388065036",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Time between this and the last block."
    },
    "tendermint_consensus_block_parts": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "67127",
          "labels": {
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        }
      ],
      "help": "Number of blockparts transmitted by peer."
    },
    "tendermint_consensus_block_size_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "18737",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Size of the block."
    },
    "tendermint_consensus_byzantine_validators": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Number of validators who tried to double sign."
    },
    "tendermint_consensus_byzantine_validators_power": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Total power of the byzantine validators."
    },
    "tendermint_consensus_fast_syncing": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Whether or not a node is fast syncing. 1 if yes, 0 if no."
    },
    "tendermint_consensus_height": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1.3106025e+07",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Height of the chain."
    },
    "tendermint_consensus_latest_block_height": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1.3106024e+07",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "The latest block height."
    },
    "tendermint_consensus_missing_validators": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "8",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Number of validators who did not sign."
    },
    "tendermint_consensus_missing_validators_power": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1.37555114e+08",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Total power of the missing validators."
    },
    "tendermint_consensus_num_txs": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Number of transactions."
    },
    "tendermint_consensus_rounds": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Number of rounds."
    },
    "tendermint_consensus_total_txs": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "4.050537e+06",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Total number of transactions."
    },
    "tendermint_consensus_validators": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "105",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Number of validators."
    },
    "tendermint_consensus_validators_power": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "3.625222404e+09",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Total power of all validators."
    },
    "tendermint_mempool_recheck_times": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "2213",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Number of times transactions are rechecked in the mempool."
    },
    "tendermint_mempool_size": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Size of the mempool (number of uncommitted transactions)."
    },
    "tendermint_mempool_tx_size_bytes": {
      "type": "HISTOGRAM",
      "metrics": [
        {
          "buckets": {
            "1": "0",
            "3": "0",
            "9": "0",
            "27": "0",
            "81": "0",
            "243": "1571",
            "729": "9743",
            "2187": "9800",
            "6561": "9802",
            "19683": "9802",
            "59049": "9802",
            "177147": "9802",
            "531441": "9802",
            "1.594323e+06": "9802",
            "4.782969e+06": "9802",
            "1.4348907e+07": "9802",
            "4.3046721e+07": "9802",
            "+Inf": "9802"
          }
        }
      ],
      "help": "Transaction sizes in bytes."
    },
    "tendermint_p2p_peer_pending_send_bytes": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "0",
          "labels": {
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        }
      ],
      "help": "Number of pending bytes to be sent to a given peer."
    },
    "tendermint_p2p_peer_receive_bytes_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "1.80183388e+08",
          "labels": {
            "chID": "0x20",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "1.311722955e+09",
          "labels": {
            "chID": "0x21",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "3.086264657e+09",
          "labels": {
            "chID": "0x22",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "1.233059e+06",
          "labels": {
            "chID": "0x23",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "4.123271e+06",
          "labels": {
            "chID": "0x30",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "9",
          "labels": {
            "chID": "0x40",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        }
      ],
      "help": "Number of bytes received from a given peer."
    },
    "tendermint_p2p_peer_send_bytes_total": {
      "type": "COUNTER",
      "metrics": [
        {
          "value": "1.79209975e+08",
          "labels": {
            "chID": "0x20",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "288065",
          "labels": {
            "chID": "0x21",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "6.99983189e+08",
          "labels": {
            "chID": "0x22",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "2.019276e+06",
          "labels": {
            "chID": "0x23",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "528",
          "labels": {
            "chID": "0x30",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        },
        {
          "value": "9",
          "labels": {
            "chID": "0x40",
            "chain_id": "heimdall-137",
            "peer_id": "ed5dd43ca95ee5e7098f301cb7d5cce5fc1a01dc"
          }
        }
      ],
      "help": "Number of bytes sent to a given peer."
    },
    "tendermint_p2p_peers": {
      "type": "GAUGE",
      "metrics": [
        {
          "value": "1",
          "labels": {
            "chain_id": "heimdall-137"
          }
        }
      ],
      "help": "Number of peers."
    },
    "tendermint_state_block_processing_time": {
      "type": "HISTOGRAM",
      "metrics": [
        {
          "buckets": {
            "1": "24686",
            "11": "63291",
            "21": "64239",
            "31": "64640",
            "41": "65025",
            "51": "65204",
            "61": "65426",
            "71": "65583",
            "81": "65696",
            "91": "65806",
            "+Inf": "66942"
          }
        }
      ],
      "help": "Time between BeginBlock and EndBlock in ms."
    }
  }
}
